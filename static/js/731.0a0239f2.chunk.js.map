{"version":3,"file":"static/js/731.0a0239f2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/LoginForm/login-form.module.css?1212","components/LoginForm/fields.js","components/LoginForm/initialState.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.js","webpack://react-homework-template/./src/shared/component/Button/button.module.css?5ed7","shared/component/Button/Button.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://react-homework-template/./src/shared/component/TextField/text-field.module.css?3919","shared/component/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js","shared/hooks/useForm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"login-form_form__S9chl\",\"label\":\"login-form_label__jgvs-\",\"span\":\"login-form_span__04tAO\",\"btn\":\"login-form_btn__83mr+\"};","const fields = {\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'User email',\n    placeholder: 'User email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'User password',\n    placeholder: 'User password',\n  },\n};\nexport default fields;\n","const initialState = {\n  email: '',\n  password: '',\n};\nexport default initialState;\n","import styles from './login-form.module.css';\nimport fields from './fields';\nimport initialState from './initialState';\nimport useForm from '../../shared/hooks/useForm';\nimport Button from '../../shared/component/Button/Button';\nimport TextField from '../../shared/component/TextField/TextField';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { email, password } = state;\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <TextField value={email} onChange={handleChange} {...fields.email} />\n      <TextField\n        value={password}\n        onChange={handleChange}\n        {...fields.password}\n      />\n      <Button>Log in</Button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../redux/auth/auth-operations';\nimport { isUserLogin } from 'redux/auth/auth-selectors';\nimport { Navigate } from 'react-router-dom';\nimport LoginForm from '../../components/LoginForm/LoginForm.jsx';\n\n// const LoginPage = () => {\n//   const isLogin = useSelector(isUserLogin);\n\n//   const dispatch = useDispatch();\n//   const handleLogin = data => {\n//     dispatch(login(data));\n//   };\n//   if (isLogin) {\n//     return <Navigate to=\"/contacts\" />;\n//   }\n//   return (\n//     <div>\n//       <h1>LoginPage</h1>\n//       <LoginForm onSubmit={handleLogin} />\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n\nconst LoginPage = () => {\n  const isLogin = useSelector(isUserLogin);\n\n  const dispatch = useDispatch();\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n  return (\n    <div>\n      <h1>LoginPage</h1>\n      <LoginForm onSubmit={handleLogin} />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__r1lcq\"};","import css from '../Button/button.module.css';\n\nconst Button = ({ children, type = 'submit' }) => {\n  return (\n    <button type={type} className={css.btn}>\n      {children}\n    </button>\n  );\n};\nexport default Button;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"text-field_wrapper__jRXgA\",\"field\":\"text-field_field__4aGz6\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from '../TextField/text-field.module.css';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <div className={css.wrapper}>\n      <label htmlFor=\"id\">{label}</label>\n      <input className={css.field} id={id} onChange={handleChange} {...props} />\n    </div>\n  );\n};\n\nexport default TextField;\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { useState, useCallback } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n  return { state, setState, handleChange, handleSubmit };\n};\nexport default useForm;\n"],"names":["email","type","name","required","label","placeholder","password","onSubmit","useForm","initialState","state","handleChange","handleSubmit","className","styles","TextField","value","onChange","fields","Button","isLogin","useSelector","isUserLogin","dispatch","useDispatch","to","data","login","children","css","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","props","id","useMemo","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","htmlFor","useState","setState","useCallback","prevState","e","preventDefault"],"sourceRoot":""}